# meson.build for building on Linux (probably works on Mac as well, untested)

# Sources start here, skip to the bottom of the file for the non-autogenerated stuff

## --- vcxproj-to-meson start ---
## AUTOGENERATED WITH vcxproj_to_meson.py
## DO NOT MODIFY MANUALLY, DO NOT REMOVE THIS COMMENT!

voidsprite_sources = files(
  join_paths('astc_dec', 'astc_decomp.cpp'),
  'BaseBrush.cpp',
  'BasePopup.cpp',
  'BaseScreen.cpp',
  'Brush1pxLine.cpp',
  'Brush1pxLinePathfind.cpp',
  'Brush1x1.cpp',
  'Brush1x1ArcX.cpp',
  'Brush1x1ArcY.cpp',
  'Brush3pxCircle.cpp',
  'BrushCircle.cpp',
  'BrushFill.cpp',
  'BrushRect.cpp',
  'BrushRectFill.cpp',
  'Gamepad.cpp',
  'LayerPalettized.cpp',
  'MainEditorPalettized.cpp',
  'PalettizedEditorColorPicker.cpp',
  'PalettizedEditorLayerPicker.cpp',
  'PopupPickColor.cpp',
  'PopupQuickConvert.cpp',
  'PopupTextTool.cpp',
  'PopupTileGeneric.cpp',
  'RPG2KTilemapPreviewScreen.cpp',
  'TilemapEditorLayerPicker.cpp',
  'ToolRectFlip.cpp',
  'ToolRectRotate.cpp',
  'ToolRectSwap.cpp',
  'BrushReplaceColor.cpp',
  'MinecraftSkinPreviewScreen.cpp',
  'ScrollingView.cpp',
  'ToolRectMove.cpp',
  'drawable.cpp',
  'DrawableManager.cpp',
  join_paths('easybmp', 'EasyBMP.cpp'),
  'EditorBrushPicker.cpp',
  'EditorColorPicker.cpp',
  'EditorLayerPicker.cpp',
  'EditorSpritesheetPreview.cpp',
  'FileIO.cpp',
  'FontRenderer.cpp',
  'main.cpp',
  'ScreenWideNavBar.cpp',
  'Layer.cpp',
  'maineditor.cpp',
  'mathops.cpp',
  'Notification.cpp',
  'Pattern.cpp',
  'platform.cpp',
  'PopupMessageBox.cpp',
  'PopupSetEditorPixelGrid.cpp',
  'PopupTextBox.cpp',
  'PopupYesNo.cpp',
  'SpritesheetPreviewScreen.cpp',
  'StartScreen.cpp',
  'TabbedView.cpp',
  'BaseTemplate.cpp',
  'TemplateMC64x32Skin.cpp',
  'TemplateRPG2KCharset.cpp',
  'TilemapPreviewScreen.cpp',
  'Timer64.cpp',
  'ToolColorPicker.cpp',
  'ToolComment.cpp',
  'ToolMeasure.cpp',
  'ToolRectClone.cpp',
  'ToolSetXSymmetry.cpp',
  'ToolSetYSymmetry.cpp',
  'ToolText.cpp',
  'UIButton.cpp',
  'UIColorInputField.cpp',
  'UIColorSlider.cpp',
  'UIDropdown.cpp',
  'UIHueSlider.cpp',
  'UILabel.cpp',
  'UILayerButton.cpp',
  'UISlider.cpp',
  'UISVPicker.cpp',
  'UITextField.cpp',
  'UtilPathfind.cpp',
  join_paths('zip', 'zip.c'),
)

## END OF AUTOGENERATED SECTION
## DO NOT MODIFY MANUALLY, DO NOT REMOVE THIS COMMENT!
## --- vcxproj-to-meson end ---

thread_dep = dependency('threads')

# We use WrapDB wraps for these dependencies (see subprojects/*.wrap in root):
libpng_dep = dependency('libpng', fallback: ['libpng', 'libpng_dep'])
pugixml_dep = dependency('pugixml', fallback: ['pugixml', 'pugixml_dep'])
zlib_dep = dependency('zlib', fallback: ['zlib', 'zlib_dep'])

# These deps are vendored in our source code; we manually add meson.build files
# to build them as static libraries, see the subfolders for these libraries
# under the source folder.
liblcf_dep = dependency('liblcf', fallback: ['liblcf', 'liblcf_dep'])
libtga_dep = dependency('libtga', fallback: ['libtga', 'libtga_dep'])

sdl2_dep = dependency('sdl2')
sdl2_ttf_dep = dependency('SDL2_ttf')
sdl2_image_dep = dependency('SDL2_image')

dependencies = [
  thread_dep,
  zlib_dep,
  libpng_dep,
  liblcf_dep,
  pugixml_dep,
  libtga_dep,
  sdl2_dep,
  sdl2_ttf_dep,
  sdl2_image_dep
]

# Windows requires sdl2main dependency
if host_machine.system() == 'windows'
  sdl2main_dep = dependency('sdl2main')
  dependencies += sdl2main_dep
endif

executable('voidsprite', voidsprite_sources,
  install: true,
  dependencies: dependencies)

# Install assets
# TODO: Allow for an install directory for the assets (/usr/share/voidsprite?)
install_dir = join_paths(get_option('prefix'), 'bin')

install_subdir('assets', install_dir: install_dir)
install_data('appfont-MPLUSRounded1c-Medium.ttf', 'appfontjp-NotoSansJP-VariableFont_wght.ttf', install_dir: install_dir)
